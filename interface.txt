

// Sua explicação ainda parece muito confusa
// Esse assunto parece muito complexo (o próprio professor disse que não é fácil)
// Assim como disse que só se aprende em contextos reais
// Com base nas informações dos slides dele sobre isso que irei lhe mostrar. Gostaria que me ajudasse a entender melhor este assunto
// Observe cada ponto e tente me explicar, se preciso com código e comentários neles

No slide do professor (inicia na página 32)
    ● 1. é um contrato
    ● 2. Quem assina se responsabiliza por implementar os métodos definidos na interface (cumprir o contrato)
    ● 3. Caso especial de classes abstratas
    ● 4. Definem um tipo de forma abstrata, apenas indicando os suportados
    ● 5. Os métodos são implementados pelas classes
    ● 6. Não possuem construtores: não pode-se criar objetos, já que métodos não são definidos.
    ● 7. Evita duplicação de código usando um tipo genérico, tendo como subtipos várias classes não relacionadas
    ● 8. Não compartilham código via herança, tendo implementações diferentes e pouco acopladas.
    ● 9. É menos intrusiva que a herança e muitas vezes, uma abordagem preferencial
    ● 10. Expõem o que o objeto deve fazer, e não como ele faz, nem o que ele tem

Cria contratos (como um conjunto de regras) 
    . que especificam como os dados podem ser armazenados e recuperados
    . mas não define como isso é feito
    . isso proporciona flexibilidade na escolha do método de armazenamento
